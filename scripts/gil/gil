#!/usr/bin/ruby

require 'optparse'

def find_ticket_number(logentry)
  re = /\[\#(\d+).*state:resolved.*\]/
  match = re.match(logentry)
  match[1] if match
end

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: gil revision [options]\n"
  opts.banner << "Project, account and token can either be given on the command line "
  opts.banner << "or in .git/config\n"
  opts.banner << "e.g\n"
  opts.banner << "[gil]\n"
  opts.banner << "  account=[your account]\n"
  opts.banner << "  token=[Your token]\n"
  opts.banner << "  project=[Your project]\n\n"

  opts.on("-p", "--project LIGHTHOUSE_PROJECT_ID", :REQUIRED,
          "The id of your Lighthouse project") do |project|
    options[:project] = project
  end

  opts.on("-a", "--account LIGHTHOUSE_PROJECT_NAME", :REQUIRED,
          "The name of your Lighthouse account") do |account|
    options[:account] = account
  end

  opts.on("-t", "--token LIGHTHOUSE_PROJECT_TOKEN", :REQUIRED,
          "Your Lighthouse api token") do |token|
    options[:token] = token
  end
end.parse!

rev = ARGV[0]

options[:project] ||= `git config gil.project`.chomp
options[:token] ||= `git config gil.token`.chomp
options[:account] ||= `git config gil.account`.chomp

if !options[:project]
  raise "No project was found either in .git config or on the command line (see gil --help)"
end

if !options[:token]
  raise "No token was found either in .git config or on the command line (see gil --help)"
end

if !options[:account]
  raise "No account was found either in .git config or on the command line (see gil --help)"
end

puts options.inspect

require File.dirname(__FILE__) + '/lighthouse'
include Lighthouse

log = `git log #{rev} --pretty=oneline --no-color`.split("\n")

tickets = log.map { |entry| find_ticket_number(entry) }.compact.uniq
Lighthouse.account = options[:account]
Lighthouse.token = options[:token]

tickets.map! do |ticket_num|
  ticket = Ticket.find(ticket_num, :params => {:project_id => options[:project]})
  "##{ticket.number} - #{ticket.title}"
end

puts tickets
